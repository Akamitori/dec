name: Test

on: [push, pull_request]

jobs:
  code:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v1

    - name: Setup 2.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.1.x'
    - name: Setup 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Setup 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Setup tooling
      run: dotnet tool install -g coveralls.net --version 1.0.0
    - name: Setup environment
      run: dotnet restore
    - name: Build 2.1
      # this seems to fail intermittently so now we're trying it repeatedly *which is terrible* but 2.1 is rapidly bitrotting
      # my kingdom for unity updating its damn mono implementation
      run: for i in {1..5}; do dotnet build --configuration "Debug 2.1" && break; done 
    - name: Build 3.1
      run: dotnet build --configuration "Debug 3.1"
    - name: Build 7.0
      run: dotnet build --configuration "Debug 7.0"
    - name: Test 2.1
      run: dotnet test -c "Debug 2.1" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    - name: Test 3.1
      run: dotnet test -c "Debug 3.1" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    - name: Test 7.0
      run: dotnet test -c "Debug 7.0" --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
    - name: Submit coverage data
      if: github.ref == 'refs/heads/dev'
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: csmacnz.Coveralls --useRelativePaths --multiple -i "$(find test/*/TestResults -type f | sed s/^/opencover=/ | sed ':a;N;$!ba;s/\n/;/g')" --serviceName github-ci --jobId $GITHUB_RUN_ID --commitId $(git rev-parse HEAD) --commitBranch "${GITHUB_REF:-none}" --commitAuthor "$(git log -1 --pretty=format:'%an')" --commitEmail "$(git log -1 --pretty=format:'%ae')" --commitMessage "$(git log -1 --pretty='%s')" --repoToken $COVERALLS_REPO_TOKEN || true

  docs:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v1
    
    - name: Setup 7.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'
    - name: Test documentation
      run: |
        sudo apt install nuget
        nuget install docfx.console
        docfx.console.*/tools/docfx.exe doc/docfx.json --warningsAsErrors
        